<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: http/v1/http.proto

namespace RoadRunner\HTTP\DTO\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>http.v1.FileUpload</code>
 */
class FileUpload extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>string name = 1;</code>
     */
    protected $name = '';
    /**
     * Generated from protobuf field <code>string mime = 2;</code>
     */
    protected $mime = '';
    /**
     * Generated from protobuf field <code>int64 size = 3;</code>
     */
    protected $size = 0;
    /**
     * Generated from protobuf field <code>int64 error = 4;</code>
     */
    protected $error = 0;
    /**
     * Generated from protobuf field <code>string temp_filename = 5;</code>
     */
    protected $temp_filename = '';
    /**
     * Generated from protobuf field <code>.http.v1.FileHeader file_header = 6;</code>
     */
    protected $file_header = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $name
     *     @type string $mime
     *     @type int|string $size
     *     @type int|string $error
     *     @type string $temp_filename
     *     @type \RoadRunner\HTTP\DTO\V1\FileHeader $file_header
     * }
     */
    public function __construct($data = NULL) {
        \RoadRunner\HTTP\DTO\V1\GPBMetadata\Http::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string name = 1;</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Generated from protobuf field <code>string name = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string mime = 2;</code>
     * @return string
     */
    public function getMime()
    {
        return $this->mime;
    }

    /**
     * Generated from protobuf field <code>string mime = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setMime($var)
    {
        GPBUtil::checkString($var, True);
        $this->mime = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>int64 size = 3;</code>
     * @return int|string
     */
    public function getSize()
    {
        return $this->size;
    }

    /**
     * Generated from protobuf field <code>int64 size = 3;</code>
     * @param int|string $var
     * @return $this
     */
    public function setSize($var)
    {
        GPBUtil::checkInt64($var);
        $this->size = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>int64 error = 4;</code>
     * @return int|string
     */
    public function getError()
    {
        return $this->error;
    }

    /**
     * Generated from protobuf field <code>int64 error = 4;</code>
     * @param int|string $var
     * @return $this
     */
    public function setError($var)
    {
        GPBUtil::checkInt64($var);
        $this->error = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string temp_filename = 5;</code>
     * @return string
     */
    public function getTempFilename()
    {
        return $this->temp_filename;
    }

    /**
     * Generated from protobuf field <code>string temp_filename = 5;</code>
     * @param string $var
     * @return $this
     */
    public function setTempFilename($var)
    {
        GPBUtil::checkString($var, True);
        $this->temp_filename = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.http.v1.FileHeader file_header = 6;</code>
     * @return \RoadRunner\HTTP\DTO\V1\FileHeader|null
     */
    public function getFileHeader()
    {
        return $this->file_header;
    }

    public function hasFileHeader()
    {
        return isset($this->file_header);
    }

    public function clearFileHeader()
    {
        unset($this->file_header);
    }

    /**
     * Generated from protobuf field <code>.http.v1.FileHeader file_header = 6;</code>
     * @param \RoadRunner\HTTP\DTO\V1\FileHeader $var
     * @return $this
     */
    public function setFileHeader($var)
    {
        GPBUtil::checkMessage($var, \RoadRunner\HTTP\DTO\V1\FileHeader::class);
        $this->file_header = $var;

        return $this;
    }

}

