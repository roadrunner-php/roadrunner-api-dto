<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: http/v1/http.proto

namespace RoadRunner\HTTP\DTO\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>http.v1.BodyHeaderValue</code>
 */
class BodyHeaderValue extends \Google\Protobuf\Internal\Message
{
    protected $value;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $data_str
     *     @type \RoadRunner\HTTP\DTO\V1\PBArray $data_arr
     * }
     */
    public function __construct($data = NULL) {
        \RoadRunner\HTTP\DTO\V1\GPBMetadata\Http::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string data_str = 1;</code>
     * @return string
     */
    public function getDataStr()
    {
        return $this->readOneof(1);
    }

    public function hasDataStr()
    {
        return $this->hasOneof(1);
    }

    /**
     * Generated from protobuf field <code>string data_str = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setDataStr($var)
    {
        GPBUtil::checkString($var, True);
        $this->writeOneof(1, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.http.v1.Array data_arr = 2;</code>
     * @return \RoadRunner\HTTP\DTO\V1\PBArray|null
     */
    public function getDataArr()
    {
        return $this->readOneof(2);
    }

    public function hasDataArr()
    {
        return $this->hasOneof(2);
    }

    /**
     * Generated from protobuf field <code>.http.v1.Array data_arr = 2;</code>
     * @param \RoadRunner\HTTP\DTO\V1\PBArray $var
     * @return $this
     */
    public function setDataArr($var)
    {
        GPBUtil::checkMessage($var, \RoadRunner\HTTP\DTO\V1\PBArray::class);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getValue()
    {
        return $this->whichOneof("value");
    }

}

