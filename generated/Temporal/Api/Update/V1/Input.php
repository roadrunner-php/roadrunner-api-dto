<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: temporal/api/update/v1/message.proto

namespace Temporal\Api\Update\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>temporal.api.update.v1.Input</code>
 */
class Input extends \Google\Protobuf\Internal\Message
{
    /**
     * Headers that are passed with the update from the requesting entity.
     * These can include things like auth or tracing tokens.
     *
     * Generated from protobuf field <code>.temporal.api.common.v1.Header header = 1;</code>
     */
    protected $header = null;
    /**
     * The name of the input handler to invoke on the target workflow
     *
     * Generated from protobuf field <code>string name = 2;</code>
     */
    protected $name = '';
    /**
     * The arguments to pass to the named handler.
     *
     * Generated from protobuf field <code>.temporal.api.common.v1.Payloads args = 3;</code>
     */
    protected $args = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Temporal\Api\Common\V1\Header $header
     *           Headers that are passed with the update from the requesting entity.
     *           These can include things like auth or tracing tokens.
     *     @type string $name
     *           The name of the input handler to invoke on the target workflow
     *     @type \Temporal\Api\Common\V1\Payloads $args
     *           The arguments to pass to the named handler.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Temporal\Api\Update\V1\Message::initOnce();
        parent::__construct($data);
    }

    /**
     * Headers that are passed with the update from the requesting entity.
     * These can include things like auth or tracing tokens.
     *
     * Generated from protobuf field <code>.temporal.api.common.v1.Header header = 1;</code>
     * @return \Temporal\Api\Common\V1\Header|null
     */
    public function getHeader()
    {
        return $this->header;
    }

    public function hasHeader()
    {
        return isset($this->header);
    }

    public function clearHeader()
    {
        unset($this->header);
    }

    /**
     * Headers that are passed with the update from the requesting entity.
     * These can include things like auth or tracing tokens.
     *
     * Generated from protobuf field <code>.temporal.api.common.v1.Header header = 1;</code>
     * @param \Temporal\Api\Common\V1\Header $var
     * @return $this
     */
    public function setHeader($var)
    {
        GPBUtil::checkMessage($var, \Temporal\Api\Common\V1\Header::class);
        $this->header = $var;

        return $this;
    }

    /**
     * The name of the input handler to invoke on the target workflow
     *
     * Generated from protobuf field <code>string name = 2;</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * The name of the input handler to invoke on the target workflow
     *
     * Generated from protobuf field <code>string name = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * The arguments to pass to the named handler.
     *
     * Generated from protobuf field <code>.temporal.api.common.v1.Payloads args = 3;</code>
     * @return \Temporal\Api\Common\V1\Payloads|null
     */
    public function getArgs()
    {
        return $this->args;
    }

    public function hasArgs()
    {
        return isset($this->args);
    }

    public function clearArgs()
    {
        unset($this->args);
    }

    /**
     * The arguments to pass to the named handler.
     *
     * Generated from protobuf field <code>.temporal.api.common.v1.Payloads args = 3;</code>
     * @param \Temporal\Api\Common\V1\Payloads $var
     * @return $this
     */
    public function setArgs($var)
    {
        GPBUtil::checkMessage($var, \Temporal\Api\Common\V1\Payloads::class);
        $this->args = $var;

        return $this;
    }

}

