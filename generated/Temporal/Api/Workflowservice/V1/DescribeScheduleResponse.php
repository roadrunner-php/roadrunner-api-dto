<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: temporal/api/workflowservice/v1/request_response.proto

namespace Temporal\Api\Workflowservice\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>temporal.api.workflowservice.v1.DescribeScheduleResponse</code>
 */
class DescribeScheduleResponse extends \Google\Protobuf\Internal\Message
{
    /**
     * The complete current schedule details. This may not match the schedule as
     * created because:
     * - some types of schedule specs may get compiled into others (e.g.
     *   CronString into StructuredCalendarSpec)
     * - some unspecified fields may be replaced by defaults
     * - some fields in the state are modified automatically
     * - the schedule may have been modified by UpdateSchedule or PatchSchedule
     *
     * Generated from protobuf field <code>.temporal.api.schedule.v1.Schedule schedule = 1;</code>
     */
    protected $schedule = null;
    /**
     * Extra schedule state info.
     *
     * Generated from protobuf field <code>.temporal.api.schedule.v1.ScheduleInfo info = 2;</code>
     */
    protected $info = null;
    /**
     * The memo and search attributes that the schedule was created with.
     *
     * Generated from protobuf field <code>.temporal.api.common.v1.Memo memo = 3;</code>
     */
    protected $memo = null;
    /**
     * Generated from protobuf field <code>.temporal.api.common.v1.SearchAttributes search_attributes = 4;</code>
     */
    protected $search_attributes = null;
    /**
     * This value can be passed back to UpdateSchedule to ensure that the
     * schedule was not modified between a Describe and an Update, which could
     * lead to lost updates and other confusion.
     *
     * Generated from protobuf field <code>bytes conflict_token = 5;</code>
     */
    protected $conflict_token = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Temporal\Api\Schedule\V1\Schedule $schedule
     *           The complete current schedule details. This may not match the schedule as
     *           created because:
     *           - some types of schedule specs may get compiled into others (e.g.
     *             CronString into StructuredCalendarSpec)
     *           - some unspecified fields may be replaced by defaults
     *           - some fields in the state are modified automatically
     *           - the schedule may have been modified by UpdateSchedule or PatchSchedule
     *     @type \Temporal\Api\Schedule\V1\ScheduleInfo $info
     *           Extra schedule state info.
     *     @type \Temporal\Api\Common\V1\Memo $memo
     *           The memo and search attributes that the schedule was created with.
     *     @type \Temporal\Api\Common\V1\SearchAttributes $search_attributes
     *     @type string $conflict_token
     *           This value can be passed back to UpdateSchedule to ensure that the
     *           schedule was not modified between a Describe and an Update, which could
     *           lead to lost updates and other confusion.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Temporal\Api\Workflowservice\V1\RequestResponse::initOnce();
        parent::__construct($data);
    }

    /**
     * The complete current schedule details. This may not match the schedule as
     * created because:
     * - some types of schedule specs may get compiled into others (e.g.
     *   CronString into StructuredCalendarSpec)
     * - some unspecified fields may be replaced by defaults
     * - some fields in the state are modified automatically
     * - the schedule may have been modified by UpdateSchedule or PatchSchedule
     *
     * Generated from protobuf field <code>.temporal.api.schedule.v1.Schedule schedule = 1;</code>
     * @return \Temporal\Api\Schedule\V1\Schedule|null
     */
    public function getSchedule()
    {
        return $this->schedule;
    }

    public function hasSchedule()
    {
        return isset($this->schedule);
    }

    public function clearSchedule()
    {
        unset($this->schedule);
    }

    /**
     * The complete current schedule details. This may not match the schedule as
     * created because:
     * - some types of schedule specs may get compiled into others (e.g.
     *   CronString into StructuredCalendarSpec)
     * - some unspecified fields may be replaced by defaults
     * - some fields in the state are modified automatically
     * - the schedule may have been modified by UpdateSchedule or PatchSchedule
     *
     * Generated from protobuf field <code>.temporal.api.schedule.v1.Schedule schedule = 1;</code>
     * @param \Temporal\Api\Schedule\V1\Schedule $var
     * @return $this
     */
    public function setSchedule($var)
    {
        GPBUtil::checkMessage($var, \Temporal\Api\Schedule\V1\Schedule::class);
        $this->schedule = $var;

        return $this;
    }

    /**
     * Extra schedule state info.
     *
     * Generated from protobuf field <code>.temporal.api.schedule.v1.ScheduleInfo info = 2;</code>
     * @return \Temporal\Api\Schedule\V1\ScheduleInfo|null
     */
    public function getInfo()
    {
        return $this->info;
    }

    public function hasInfo()
    {
        return isset($this->info);
    }

    public function clearInfo()
    {
        unset($this->info);
    }

    /**
     * Extra schedule state info.
     *
     * Generated from protobuf field <code>.temporal.api.schedule.v1.ScheduleInfo info = 2;</code>
     * @param \Temporal\Api\Schedule\V1\ScheduleInfo $var
     * @return $this
     */
    public function setInfo($var)
    {
        GPBUtil::checkMessage($var, \Temporal\Api\Schedule\V1\ScheduleInfo::class);
        $this->info = $var;

        return $this;
    }

    /**
     * The memo and search attributes that the schedule was created with.
     *
     * Generated from protobuf field <code>.temporal.api.common.v1.Memo memo = 3;</code>
     * @return \Temporal\Api\Common\V1\Memo|null
     */
    public function getMemo()
    {
        return $this->memo;
    }

    public function hasMemo()
    {
        return isset($this->memo);
    }

    public function clearMemo()
    {
        unset($this->memo);
    }

    /**
     * The memo and search attributes that the schedule was created with.
     *
     * Generated from protobuf field <code>.temporal.api.common.v1.Memo memo = 3;</code>
     * @param \Temporal\Api\Common\V1\Memo $var
     * @return $this
     */
    public function setMemo($var)
    {
        GPBUtil::checkMessage($var, \Temporal\Api\Common\V1\Memo::class);
        $this->memo = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.temporal.api.common.v1.SearchAttributes search_attributes = 4;</code>
     * @return \Temporal\Api\Common\V1\SearchAttributes|null
     */
    public function getSearchAttributes()
    {
        return $this->search_attributes;
    }

    public function hasSearchAttributes()
    {
        return isset($this->search_attributes);
    }

    public function clearSearchAttributes()
    {
        unset($this->search_attributes);
    }

    /**
     * Generated from protobuf field <code>.temporal.api.common.v1.SearchAttributes search_attributes = 4;</code>
     * @param \Temporal\Api\Common\V1\SearchAttributes $var
     * @return $this
     */
    public function setSearchAttributes($var)
    {
        GPBUtil::checkMessage($var, \Temporal\Api\Common\V1\SearchAttributes::class);
        $this->search_attributes = $var;

        return $this;
    }

    /**
     * This value can be passed back to UpdateSchedule to ensure that the
     * schedule was not modified between a Describe and an Update, which could
     * lead to lost updates and other confusion.
     *
     * Generated from protobuf field <code>bytes conflict_token = 5;</code>
     * @return string
     */
    public function getConflictToken()
    {
        return $this->conflict_token;
    }

    /**
     * This value can be passed back to UpdateSchedule to ensure that the
     * schedule was not modified between a Describe and an Update, which could
     * lead to lost updates and other confusion.
     *
     * Generated from protobuf field <code>bytes conflict_token = 5;</code>
     * @param string $var
     * @return $this
     */
    public function setConflictToken($var)
    {
        GPBUtil::checkString($var, False);
        $this->conflict_token = $var;

        return $this;
    }

}

