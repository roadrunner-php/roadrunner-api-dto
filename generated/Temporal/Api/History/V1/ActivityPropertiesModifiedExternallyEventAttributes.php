<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: temporal/api/history/v1/message.proto

namespace Temporal\Api\History\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>temporal.api.history.v1.ActivityPropertiesModifiedExternallyEventAttributes</code>
 */
class ActivityPropertiesModifiedExternallyEventAttributes extends \Google\Protobuf\Internal\Message
{
    /**
     * The id of the `ACTIVITY_TASK_SCHEDULED` event this modification corresponds to.
     *
     * Generated from protobuf field <code>int64 scheduled_event_id = 1;</code>
     */
    protected $scheduled_event_id = 0;
    /**
     * If set, update the retry policy of the activity, replacing it with the specified one.
     * The number of attempts at the activity is preserved.
     *
     * Generated from protobuf field <code>.temporal.api.common.v1.RetryPolicy new_retry_policy = 2;</code>
     */
    protected $new_retry_policy = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int|string $scheduled_event_id
     *           The id of the `ACTIVITY_TASK_SCHEDULED` event this modification corresponds to.
     *     @type \Temporal\Api\Common\V1\RetryPolicy $new_retry_policy
     *           If set, update the retry policy of the activity, replacing it with the specified one.
     *           The number of attempts at the activity is preserved.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Temporal\Api\History\V1\Message::initOnce();
        parent::__construct($data);
    }

    /**
     * The id of the `ACTIVITY_TASK_SCHEDULED` event this modification corresponds to.
     *
     * Generated from protobuf field <code>int64 scheduled_event_id = 1;</code>
     * @return int|string
     */
    public function getScheduledEventId()
    {
        return $this->scheduled_event_id;
    }

    /**
     * The id of the `ACTIVITY_TASK_SCHEDULED` event this modification corresponds to.
     *
     * Generated from protobuf field <code>int64 scheduled_event_id = 1;</code>
     * @param int|string $var
     * @return $this
     */
    public function setScheduledEventId($var)
    {
        GPBUtil::checkInt64($var);
        $this->scheduled_event_id = $var;

        return $this;
    }

    /**
     * If set, update the retry policy of the activity, replacing it with the specified one.
     * The number of attempts at the activity is preserved.
     *
     * Generated from protobuf field <code>.temporal.api.common.v1.RetryPolicy new_retry_policy = 2;</code>
     * @return \Temporal\Api\Common\V1\RetryPolicy|null
     */
    public function getNewRetryPolicy()
    {
        return $this->new_retry_policy;
    }

    public function hasNewRetryPolicy()
    {
        return isset($this->new_retry_policy);
    }

    public function clearNewRetryPolicy()
    {
        unset($this->new_retry_policy);
    }

    /**
     * If set, update the retry policy of the activity, replacing it with the specified one.
     * The number of attempts at the activity is preserved.
     *
     * Generated from protobuf field <code>.temporal.api.common.v1.RetryPolicy new_retry_policy = 2;</code>
     * @param \Temporal\Api\Common\V1\RetryPolicy $var
     * @return $this
     */
    public function setNewRetryPolicy($var)
    {
        GPBUtil::checkMessage($var, \Temporal\Api\Common\V1\RetryPolicy::class);
        $this->new_retry_policy = $var;

        return $this;
    }

}

