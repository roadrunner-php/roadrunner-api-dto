<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: temporal/api/history/v1/message.proto

namespace Temporal\Api\History\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>temporal.api.history.v1.WorkflowTaskCompletedEventAttributes</code>
 */
class WorkflowTaskCompletedEventAttributes extends \Google\Protobuf\Internal\Message
{
    /**
     * The id of the `WORKFLOW_TASK_SCHEDULED` event this task corresponds to
     *
     * Generated from protobuf field <code>int64 scheduled_event_id = 1;</code>
     */
    protected $scheduled_event_id = 0;
    /**
     * The id of the `WORKFLOW_TASK_STARTED` event this task corresponds to
     *
     * Generated from protobuf field <code>int64 started_event_id = 2;</code>
     */
    protected $started_event_id = 0;
    /**
     * Identity of the worker who completed this task
     *
     * Generated from protobuf field <code>string identity = 3;</code>
     */
    protected $identity = '';
    /**
     * Binary ID of the worker who completed this task
     *
     * Generated from protobuf field <code>string binary_checksum = 4;</code>
     */
    protected $binary_checksum = '';
    /**
     * Version info of the worker who processed this workflow task. If present, the `build_id` field
     * within is also used as `binary_checksum`, which may be omitted in that case (it may also be
     * populated to preserve compatibility).
     *
     * Generated from protobuf field <code>.temporal.api.common.v1.WorkerVersionStamp worker_version = 5;</code>
     */
    protected $worker_version = null;
    /**
     * Data the SDK wishes to record for itself, but server need not interpret, and does not
     * directly impact workflow state.
     *
     * Generated from protobuf field <code>.temporal.api.sdk.v1.WorkflowTaskCompletedMetadata sdk_metadata = 6;</code>
     */
    protected $sdk_metadata = null;
    /**
     * Local usage data sent during workflow task completion and recorded here for posterity
     *
     * Generated from protobuf field <code>.temporal.api.common.v1.MeteringMetadata metering_metadata = 13;</code>
     */
    protected $metering_metadata = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int|string $scheduled_event_id
     *           The id of the `WORKFLOW_TASK_SCHEDULED` event this task corresponds to
     *     @type int|string $started_event_id
     *           The id of the `WORKFLOW_TASK_STARTED` event this task corresponds to
     *     @type string $identity
     *           Identity of the worker who completed this task
     *     @type string $binary_checksum
     *           Binary ID of the worker who completed this task
     *     @type \Temporal\Api\Common\V1\WorkerVersionStamp $worker_version
     *           Version info of the worker who processed this workflow task. If present, the `build_id` field
     *           within is also used as `binary_checksum`, which may be omitted in that case (it may also be
     *           populated to preserve compatibility).
     *     @type \Temporal\Api\Sdk\V1\WorkflowTaskCompletedMetadata $sdk_metadata
     *           Data the SDK wishes to record for itself, but server need not interpret, and does not
     *           directly impact workflow state.
     *     @type \Temporal\Api\Common\V1\MeteringMetadata $metering_metadata
     *           Local usage data sent during workflow task completion and recorded here for posterity
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Temporal\Api\History\V1\Message::initOnce();
        parent::__construct($data);
    }

    /**
     * The id of the `WORKFLOW_TASK_SCHEDULED` event this task corresponds to
     *
     * Generated from protobuf field <code>int64 scheduled_event_id = 1;</code>
     * @return int|string
     */
    public function getScheduledEventId()
    {
        return $this->scheduled_event_id;
    }

    /**
     * The id of the `WORKFLOW_TASK_SCHEDULED` event this task corresponds to
     *
     * Generated from protobuf field <code>int64 scheduled_event_id = 1;</code>
     * @param int|string $var
     * @return $this
     */
    public function setScheduledEventId($var)
    {
        GPBUtil::checkInt64($var);
        $this->scheduled_event_id = $var;

        return $this;
    }

    /**
     * The id of the `WORKFLOW_TASK_STARTED` event this task corresponds to
     *
     * Generated from protobuf field <code>int64 started_event_id = 2;</code>
     * @return int|string
     */
    public function getStartedEventId()
    {
        return $this->started_event_id;
    }

    /**
     * The id of the `WORKFLOW_TASK_STARTED` event this task corresponds to
     *
     * Generated from protobuf field <code>int64 started_event_id = 2;</code>
     * @param int|string $var
     * @return $this
     */
    public function setStartedEventId($var)
    {
        GPBUtil::checkInt64($var);
        $this->started_event_id = $var;

        return $this;
    }

    /**
     * Identity of the worker who completed this task
     *
     * Generated from protobuf field <code>string identity = 3;</code>
     * @return string
     */
    public function getIdentity()
    {
        return $this->identity;
    }

    /**
     * Identity of the worker who completed this task
     *
     * Generated from protobuf field <code>string identity = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setIdentity($var)
    {
        GPBUtil::checkString($var, True);
        $this->identity = $var;

        return $this;
    }

    /**
     * Binary ID of the worker who completed this task
     *
     * Generated from protobuf field <code>string binary_checksum = 4;</code>
     * @return string
     */
    public function getBinaryChecksum()
    {
        return $this->binary_checksum;
    }

    /**
     * Binary ID of the worker who completed this task
     *
     * Generated from protobuf field <code>string binary_checksum = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setBinaryChecksum($var)
    {
        GPBUtil::checkString($var, True);
        $this->binary_checksum = $var;

        return $this;
    }

    /**
     * Version info of the worker who processed this workflow task. If present, the `build_id` field
     * within is also used as `binary_checksum`, which may be omitted in that case (it may also be
     * populated to preserve compatibility).
     *
     * Generated from protobuf field <code>.temporal.api.common.v1.WorkerVersionStamp worker_version = 5;</code>
     * @return \Temporal\Api\Common\V1\WorkerVersionStamp|null
     */
    public function getWorkerVersion()
    {
        return $this->worker_version;
    }

    public function hasWorkerVersion()
    {
        return isset($this->worker_version);
    }

    public function clearWorkerVersion()
    {
        unset($this->worker_version);
    }

    /**
     * Version info of the worker who processed this workflow task. If present, the `build_id` field
     * within is also used as `binary_checksum`, which may be omitted in that case (it may also be
     * populated to preserve compatibility).
     *
     * Generated from protobuf field <code>.temporal.api.common.v1.WorkerVersionStamp worker_version = 5;</code>
     * @param \Temporal\Api\Common\V1\WorkerVersionStamp $var
     * @return $this
     */
    public function setWorkerVersion($var)
    {
        GPBUtil::checkMessage($var, \Temporal\Api\Common\V1\WorkerVersionStamp::class);
        $this->worker_version = $var;

        return $this;
    }

    /**
     * Data the SDK wishes to record for itself, but server need not interpret, and does not
     * directly impact workflow state.
     *
     * Generated from protobuf field <code>.temporal.api.sdk.v1.WorkflowTaskCompletedMetadata sdk_metadata = 6;</code>
     * @return \Temporal\Api\Sdk\V1\WorkflowTaskCompletedMetadata|null
     */
    public function getSdkMetadata()
    {
        return $this->sdk_metadata;
    }

    public function hasSdkMetadata()
    {
        return isset($this->sdk_metadata);
    }

    public function clearSdkMetadata()
    {
        unset($this->sdk_metadata);
    }

    /**
     * Data the SDK wishes to record for itself, but server need not interpret, and does not
     * directly impact workflow state.
     *
     * Generated from protobuf field <code>.temporal.api.sdk.v1.WorkflowTaskCompletedMetadata sdk_metadata = 6;</code>
     * @param \Temporal\Api\Sdk\V1\WorkflowTaskCompletedMetadata $var
     * @return $this
     */
    public function setSdkMetadata($var)
    {
        GPBUtil::checkMessage($var, \Temporal\Api\Sdk\V1\WorkflowTaskCompletedMetadata::class);
        $this->sdk_metadata = $var;

        return $this;
    }

    /**
     * Local usage data sent during workflow task completion and recorded here for posterity
     *
     * Generated from protobuf field <code>.temporal.api.common.v1.MeteringMetadata metering_metadata = 13;</code>
     * @return \Temporal\Api\Common\V1\MeteringMetadata|null
     */
    public function getMeteringMetadata()
    {
        return $this->metering_metadata;
    }

    public function hasMeteringMetadata()
    {
        return isset($this->metering_metadata);
    }

    public function clearMeteringMetadata()
    {
        unset($this->metering_metadata);
    }

    /**
     * Local usage data sent during workflow task completion and recorded here for posterity
     *
     * Generated from protobuf field <code>.temporal.api.common.v1.MeteringMetadata metering_metadata = 13;</code>
     * @param \Temporal\Api\Common\V1\MeteringMetadata $var
     * @return $this
     */
    public function setMeteringMetadata($var)
    {
        GPBUtil::checkMessage($var, \Temporal\Api\Common\V1\MeteringMetadata::class);
        $this->metering_metadata = $var;

        return $this;
    }

}

